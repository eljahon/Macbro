services:
  - docker:19.03.1-dind

variables:
  GIT_DEPTH: 10
  GIT_STRATEGY: clone
  BUILD_DIR: "~/builds/$CI_RUNNER_SHORT_TOKEN/0"
  CLONE_DIR: "$BUILD_DIR/$CI_PROJECT_PATH"
  NAMESPACE: "microservices"

before_script:
  ## ssh
  - eval $(ssh-agent -s)
  - echo "$RUNNER_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  ##  cloning
  - cd ~
  - mkdir -p builds/$CI_RUNNER_SHORT_TOKEN/0
  - cd $BUILD_DIR
  - rm -rf $CLONE_DIR && mkdir -p $CLONE_DIR
  - git clone --recurse-submodules git@gitlab.udevs.io:${CI_PROJECT_PATH}.git $CLONE_DIR
  - cd $CLONE_DIR
  ## docker login
  - docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD

stages:
  - build
  - deploy

build_image:
  stage: build
  script:
    - make build-image TAG=$CI_PIPELINE_IID
    - make push-image TAG=$CI_PIPELINE_IID
  only:
    - master

deploy_to_prod:
  stage: deploy
  script:
    - curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x ./kubectl && mkdir -p ~/.kube && mv ./kubectl ~/.kube && export PATH=$PATH:$HOME/.kube
    - cp $MACBRO_KUBECONFIG ~/.kube/config
    - source .build_info
    - kubectl apply -f .kube/
    - kubectl set image -n $NAMESPACE deployment/$DEPLOYMENT $DEPLOYMENT=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_IID
    - rm -rf ~/.kube
  only:
    - master


# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: admin
#   name: admin
#   namespace: microservices
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: admin
#   template:
#     metadata:
#       labels:
#         app: admin
#     spec:
#       affinity:
#         nodeAffinity:
#           requiredDuringSchedulingIgnoredDuringExecution:
#             nodeSelectorTerms:
#               - matchExpressions:
#                   - key: apps
#                     operator: In
#                     values:
#                       - "true"
#       imagePullSecrets:
#         - name: gitlab-registry
#       containers:
#         - image: gitlab.udevs.io:5050/macbro/mb_admin:latest
#           name: admin
#           ports:
#             - containerPort: 80
#           imagePullPolicy: Always
#       restartPolicy: Always
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: admin
#   namespace: microservices
# spec:
#   ports:
#     - port: 80
#       targetPort: 8080
#   selector:
#     app: admin
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: admin-ingress
#   namespace: microservices
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     cert-manager.io/cluster-issuer: "letsencrypt-prod"
# spec:
#   tls:
#     - hosts:
#         - admin.macbro.uz
#       secretName: adminmacbro-tls
#   rules:
#     - host: admin.macbro.uz
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: admin
#                 port:
#                   number: 8080